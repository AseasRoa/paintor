{
  "root": true,
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "env": {
    "browser": true,
    "node": true,
    "es2024": true
  },
  "ignorePatterns": [
    // See .eslintignore file
  ],
  "overrides": [
    /*
     * All Files
     */
    {
      "files": ["**/*.?(c|m)[jt]s?(x)"],
      "plugins": [
        "jsdoc" // https://github.com/gajus/eslint-plugin-jsdoc
      ],
      "extends": [
        "eslint:recommended",
        "plugin:jsdoc/recommended"
      ],
      "rules": {
        // ESLint: Possible Problems
        "array-callback-return": "error",
        "no-constant-condition": "off",
        "no-constructor-return": "error",
        "no-duplicate-imports": "error",
        "no-new-native-nonconstructor": "error",
        "no-self-compare": "error",
        "no-unused-private-class-members": "error",
        "no-unused-vars": "warn",
        "no-use-before-define": ["error", {
          "functions": false,
          "classes": true,
          "variables": true,
          "allowNamedExports": false
        }],

        // ESLint: Suggestions
        "accessor-pairs": "error",
        "block-scoped-var": "error",
        "camelcase": "error",
        "curly": ["error", "multi-line"],
        "default-param-last": "error",
        "eqeqeq": "error",
        "func-name-matching": "error",
        "func-names": ["error", "as-needed"],
        "grouped-accessor-pairs": "error",
        "init-declarations": ["error", "always"],
        "max-classes-per-file": ["error", 1],
        "multiline-comment-style": ["error", "starred-block"],
        "new-cap": "error",
        "no-array-constructor": "error",
        "no-confusing-arrow": "error",
        "no-else-return": "error",
        "no-extend-native": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-loop-func": "error",
        "no-new": "error",
        "no-new-wrappers": "error",
        "no-plusplus": ["error", {"allowForLoopAfterthoughts": true}],
        "no-shadow": "warn",
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-escape": "off", // Found issues in regex when used in a template string in RegExp()
        "no-useless-return": "error",
        "no-var": "error",
        "object-shorthand": [2, "consistent-as-needed"],
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-destructuring": "warn",
        "prefer-object-has-own": "error",
        "prefer-rest-params": "error",
        "prefer-template": "warn",
        "quote-props": ["error", "consistent-as-needed"],
        "require-await": "warn",
        "require-unicode-regexp": "error",
        "require-yield": "error",
        "sort-imports": [
          "error", {"ignoreCase": true, "ignoreDeclarationSort": true}
        ],
        "spaced-comment": ["error", "always"],
        "strict": ["error", "never"],
        "symbol-description": "error",
        "vars-on-top": "error",

        // ESLint: Layout & Formatting
        "brace-style": ["error", "stroustrup", {"allowSingleLine": false}],
        "indent": [
          "error", 2, {
            "SwitchCase": 1,
            "VariableDeclarator": "first",
            "MemberExpression": 0,
            "FunctionDeclaration": {"body": 1, "parameters": "first"},
            "FunctionExpression": {"body": 1, "parameters": "first"},
            "StaticBlock": {"body": 1},
            "CallExpression": {"arguments": "first"},
            "ArrayExpression": "first",
            "ObjectExpression": "first",
            "ImportDeclaration": 1,
            "flatTernaryExpressions": false,
            "offsetTernaryExpressions": false,
            "ignoreComments": false
          }
        ],
        "linebreak-style": ["error", "unix"],
        "no-tabs": "error",
        "semi": ["error", "never"],

        // JsDoc
        "jsdoc/check-types": "off",
        "jsdoc/tag-lines": ["error", "any", {"startLines": 1}],
        "jsdoc/require-param-description": "off",
        "jsdoc/require-property-description": "off",
        "jsdoc/no-bad-blocks": "error",
        "jsdoc/no-undefined-types": "off", // TypeScript deals with this
        "jsdoc/require-returns-description": "off"
      }
    },
    /*
     * Test Files
     */
    {
      "files": ["**/*.{test,spec}.?(c|m)[jt]s?(x)"],
      "env": {
        "vitest-globals/env": true
      },
      "plugins": [
        "vitest", // https://github.com/veritem/eslint-plugin-vitest
        "vitest-globals" // https://github.com/saqqdy/eslint-plugin-vitest-globals
      ],
      "extends": [
        "plugin:vitest/recommended",
        "plugin:vitest-globals/recommended"
      ],
      "rules": {
        // Vitest
        "vitest/no-alias-methods": "error",
        "vitest/no-disabled-tests": "warn",
        "vitest/no-duplicate-hooks": "error",
        "vitest/no-focused-tests": "error",
        "vitest/no-interpolation-in-snapshots": "error",
        "vitest/no-standalone-expect": "error",
        "vitest/no-test-prefixes": "error",
        "vitest/no-test-return-statement": "error",
        "vitest/prefer-each": "error",
        "vitest/prefer-hooks-in-order": "error",
        "vitest/prefer-hooks-on-top": "error",
        "vitest/prefer-mock-promise-shorthand": "error",
        "vitest/prefer-strict-equal": "error",
        "vitest/prefer-to-contain": "error",
        "vitest/prefer-todo": "error",
        "vitest/require-hook": "error",
        "vitest/require-top-level-describe": "error"
      }
    }
  ]
}
