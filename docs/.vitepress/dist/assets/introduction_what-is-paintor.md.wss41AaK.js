import{_ as e,c as t,o as a,V as r}from"./chunks/framework.tlLIsAZ3.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/what-is-paintor.md","filePath":"introduction/what-is-paintor.md"}'),i={name:"introduction/what-is-paintor.md"},o=r('<h2 id="what-is-paintor" tabindex="-1">What is Paintor? <a class="header-anchor" href="#what-is-paintor" aria-label="Permalink to &quot;What is Paintor?&quot;">​</a></h2><p>Paintor is a JavaScript library for building client-side user interfaces or HTML code.</p><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><ul><li><strong>100% JavaScript</strong>: No transpilation. The code you write is the code to run.</li><li><strong>JS Templates</strong>: HTML-like structure (HyperScript) in JavaScript with type safety in the smallest detail.</li><li><strong>HTML Templates</strong>: Optional HTML syntax in JavaScript <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals" target="_blank" rel="noreferrer">template literals</a>.</li><li><strong>SSR</strong>: The output can be HTML code for server-side rendering.</li><li><strong>Reactivity</strong>: Through <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy" target="_blank" rel="noreferrer">Proxy</a> and DOM events.</li><li><strong>Internationalization (i18n)</strong>: Render the templates in the client&#39;s language.</li><li><strong>Type Definitions</strong>: TypeScript type definitions for code completion and type safety.</li></ul>',4),n=[o];function s(l,c,p,d,h,_){return a(),t("div",null,n)}const g=e(i,[["render",s]]);export{f as __pageData,g as default};
